"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[846],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var o=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=o.createContext({}),u=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=u(e.components);return o.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(n),h=i,d=c["".concat(s,".").concat(h)]||c[h]||m[h]||r;return n?o.createElement(d,a(a({ref:t},p),{},{components:n})):o.createElement(d,a({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,a=new Array(r);a[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:i,a[1]=l;for(var u=2;u<r;u++)a[u]=n[u];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},25418:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>u});var o=n(87462),i=(n(67294),n(3905));const r={sidebar_position:3},a="What is this?",l={unversionedId:"Explanation",id:"Explanation",title:"What is this?",description:"InfiniteMath is a module that allows you to surpass the double-precision floating-point number limit which about:",source:"@site/docs/Explanation.md",sourceDirName:".",slug:"/Explanation",permalink:"/infinitemath/docs/Explanation",draft:!1,editUrl:"https://github.com/KdudeDev/InfiniteMath/edit/main/docs/Explanation.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"defaultSidebar",previous:{title:"Installation",permalink:"/infinitemath/docs/Installation"}},s={},u=[],p={toc:u},c="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(c,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"what-is-this"},"What is this?"),(0,i.kt)("p",null,"InfiniteMath is a module that allows you to surpass the double-precision floating-point number limit which about:"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"-10^308 to 10^308")),(0,i.kt)("p",null,"This is normally perfectly fine for games, but sometimes you might want to go past that limit, even just a little bit. InfiniteMath allows you to have practically infinite numbers.\nInfiniteMath stores 2 numbers instead of 1 in a clever way to get around the limit."),(0,i.kt)("p",null,"InfiniteMath's limit is about:"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"-10^^308 to 10^^308")),(0,i.kt)("p",null,"In simpler terms, Roblox's normal limit is 1 with 308 zeros. InfiniteMath's limit is 1 with 10^308 zeros."),(0,i.kt)("p",null,"Fun fact, a googolplex is 10^100^100, which means you can use a googolplex with InfiniteMath."),(0,i.kt)("p",null,"Numbers constructed from InfiniteMath supports arithmetic operators ",(0,i.kt)("inlineCode",{parentName:"p"},"(+, -, *, /, ^, %)")," with constructed numbers and normal numbers, and comparison operators ",(0,i.kt)("inlineCode",{parentName:"p"},"(<, >, <=, >=, ==, ~=)")," with other constructed numbers. InfiniteMath also has support for OrderedDataStores."),(0,i.kt)("p",null,"There are also suffixes up to ",(0,i.kt)("inlineCode",{parentName:"p"},"1e+12000"),", after that all numbers will display scientific notation. If you want to see all the suffixes, here's a ",(0,i.kt)("a",{parentName:"p",href:"https://docs.google.com/document/d/e/2PACX-1vTB2zhx8PCdu5HpV5kwqmNx8BV9RCv44qZaljlTb0Mm0nkzwMQ2cI6aupxrNktrlylsp-QnbES-XteP/pub"},"google doc")," with them."),(0,i.kt)("p",null,"If you have a list that goes higher than ",(0,i.kt)("inlineCode",{parentName:"p"},"1e+12000")," (Trillinovenonagintanongentillion/TRNNA), by all means share it with me, I'd love to see it."),(0,i.kt)("h1",{id:"how-does-it-work"},"How does it work?"),(0,i.kt)("p",null,"A normal number in Roblox looks like this:"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"1")),(0,i.kt)("p",null,"Now if we were to convert that to InfiniteMath, it would look like:"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"{1, 0}")),(0,i.kt)("p",null,"To explain, we can construct a string out of a number by taking the coefficient and the exponent, and splitting them up into a string."),(0,i.kt)("p",null,"Lets say we want to use ",(0,i.kt)("inlineCode",{parentName:"p"},"1000")," with the module, we take the coefficient (1) and the exponent, which the amount of zeros (3) and put them in a string:"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"{1, 3}")),(0,i.kt)("p",null,"Now if we did something like ",(0,i.kt)("inlineCode",{parentName:"p"},"{1, 3} + {1, 2}"),", we would get:"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"{1.1, 3} (1100)")),(0,i.kt)("p",null,"And since we're not using numbers, we can go above the limit. For example, ",(0,i.kt)("inlineCode",{parentName:"p"},'"1, 1000"')," is equal to 1 with 1000 zeros, or 1 Untrigintatrecentillion. We can continue all the way up until reaching ",(0,i.kt)("inlineCode",{parentName:"p"},"1e+308")," zeros, which would look like:"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"{1, 1e+308}")),(0,i.kt)("p",null,"And if we tried to display that as a number, it would return ",(0,i.kt)("inlineCode",{parentName:"p"},"1e+1.e+308"),", aka 1 with ",(0,i.kt)("inlineCode",{parentName:"p"},"1 * 10^308")," zeros. This is practically infinite, and if you ever have a use for going higher I will be very surprised."))}m.isMDXComponent=!0}}]);