[{"title":"InfiniteMath","type":0,"sectionRef":"#","url":"/infinitemath/api/InfiniteMath","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"InfiniteMath","url":"/infinitemath/api/InfiniteMath#functions","content":" "},{"title":"new​","type":1,"pageTitle":"InfiniteMath","url":"/infinitemath/api/InfiniteMath#new","content":"&lt;/&gt; InfiniteMath.new(val: number | string | table) → Number Returns a new InfiniteMath constructed number You can use numbers 1, correctly formatted strings &quot;1,0&quot;, tables {1, 0}, and other constructed numbers InfiniteMath.new(1). print(InfiniteMath.new(1)) -- 1 To create a number above 1e+308, we can use strings or tables. print(InfiniteMath.new(&quot;1,1000&quot;)) -- 10DTL print(InfiniteMath.new({1, 1000})) -- 10DTL   "},{"title":"floor​","type":1,"pageTitle":"InfiniteMath","url":"/infinitemath/api/InfiniteMath#floor","content":"&lt;/&gt; InfiniteMath.floor(Num: number | string | Number) → Number Rounds a number down to the nearest integer  "},{"title":"round​","type":1,"pageTitle":"InfiniteMath","url":"/infinitemath/api/InfiniteMath#round","content":"&lt;/&gt; InfiniteMath.round(Num: number | string | Number) → Number Rounds a number to the nearest integer  "},{"title":"ceil​","type":1,"pageTitle":"InfiniteMath","url":"/infinitemath/api/InfiniteMath#ceil","content":"&lt;/&gt; InfiniteMath.ceil(Num: number | string | Number) → Number Rounds a number up to the nearest integer  "},{"title":"abs​","type":1,"pageTitle":"InfiniteMath","url":"/infinitemath/api/InfiniteMath#abs","content":"&lt;/&gt; InfiniteMath.abs(Num: number | string | Number) → Number Returns the absolute value (distance from 0)  "},{"title":"clamp​","type":1,"pageTitle":"InfiniteMath","url":"/infinitemath/api/InfiniteMath#clamp","content":"&lt;/&gt; InfiniteMath.clamp( Num: number | string | Number, Min: number | string | Number, Max: number | string | Number ) → Number Clamps a number between a minimum and maximum value  "},{"title":"min​","type":1,"pageTitle":"InfiniteMath","url":"/infinitemath/api/InfiniteMath#min","content":"&lt;/&gt; InfiniteMath.min(...: number | string | Number) → Number Returns the smallest number among the given arguments  "},{"title":"max​","type":1,"pageTitle":"InfiniteMath","url":"/infinitemath/api/InfiniteMath#max","content":"&lt;/&gt; InfiniteMath.max(...: number | string | Number) → Number Returns the largest number among the given arguments  "},{"title":"sign​","type":1,"pageTitle":"InfiniteMath","url":"/infinitemath/api/InfiniteMath#sign","content":"&lt;/&gt; InfiniteMath.sign(Num: number | string | Number) → number Returns the -1 if n &lt; 0, if n == 0, or 1 if n &gt; 0  "},{"title":"sqrt​","type":1,"pageTitle":"InfiniteMath","url":"/infinitemath/api/InfiniteMath#sqrt","content":"&lt;/&gt; InfiniteMath.sqrt(Num: number | string | Number) → Number Returns the square root of a number  "},{"title":"fmod​","type":1,"pageTitle":"InfiniteMath","url":"/infinitemath/api/InfiniteMath#fmod","content":"&lt;/&gt; InfiniteMath.fmod( a: number | string | Number, b: number | string | Number ) → Number Returns the remainder of the division of a by b that rounds the quotient towards zero.  "},{"title":"modf​","type":1,"pageTitle":"InfiniteMath","url":"/infinitemath/api/InfiniteMath#modf","content":"&lt;/&gt; InfiniteMath.modf(Num: number | string | Number) → Number Returns both the integral part of n and the fractional part (if there is one).  "},{"title":"log​","type":1,"pageTitle":"InfiniteMath","url":"/infinitemath/api/InfiniteMath#log","content":"&lt;/&gt; InfiniteMath.log( Num: number | string | Number, Base: number ) → Number   "},{"title":"log10​","type":1,"pageTitle":"InfiniteMath","url":"/infinitemath/api/InfiniteMath#log10","content":"&lt;/&gt; InfiniteMath.log10(Num: number | string | Number) → Number Returns the base-10 logarithm of x. "},{"title":"Number","type":0,"sectionRef":"#","url":"/infinitemath/api/Number","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Number","url":"/infinitemath/api/Number#functions","content":" "},{"title":"GetZeroes​","type":1,"pageTitle":"Number","url":"/infinitemath/api/Number#GetZeroes","content":"&lt;/&gt; Number:GetZeroes() → number Returns the amount of zeroes in the number print(InfiniteMath.new(1000):GetZeros()) -- 3   "},{"title":"Reverse​","type":1,"pageTitle":"Number","url":"/infinitemath/api/Number#Reverse","content":"&lt;/&gt; Number:Reverse() → number Reverse will attempt to return the constructed number converted into a regular number. If the constructed number is above 1e+308 it will instead return INF. print(InfiniteMath.new(&quot;1, 3&quot;):Reverse()) -- 1000   "},{"title":"GetSuffix​","type":1,"pageTitle":"Number","url":"/infinitemath/api/Number#GetSuffix","content":"&lt;/&gt; Number:GetSuffix(abbreviation: boolean | nil) → string Returns a string with the number and a suffix at the end, these suffixes will go up to 1e+12000. After, it will default to returning scientific notation. By default, it will return an abbreviated suffix (1K). Using true will use the default behavior. Using false will return the full suffix (1 Thousand). print(InfiniteMath.new(1000):GetSuffix()) -- 1K print(InfiniteMath.new(1000):GetSuffix(true)) -- 1K print(InfiniteMath.new(1000):GetSuffix(false)) -- 1 Thousand   "},{"title":"ScientificNotation​","type":1,"pageTitle":"Number","url":"/infinitemath/api/Number#ScientificNotation","content":"&lt;/&gt; Number:ScientificNotation( abbreviation: boolean | nil, abbreviate: boolean | nil ) → string  "},{"title":"Installation","type":0,"sectionRef":"#","url":"/infinitemath/docs/Installation","content":"","keywords":""},{"title":"Roblox Studio Plugin​","type":1,"pageTitle":"Installation","url":"/infinitemath/docs/Installation#roblox-studio-plugin","content":"Download the Roblox Plugin here! "},{"title":"What is this?","type":0,"sectionRef":"#","url":"/infinitemath/docs/Explanation","content":"What is this? InfiniteMath is a module that allows you to surpass the double-precision floating-point number limit which about: -10^308 to 10^308 This is normally perfectly fine for games, but sometimes you might want to go past that limit, even just a little bit. InfiniteMath allows you to have practically infinite numbers. InfiniteMath stores 2 numbers instead of 1 in a clever way to get around the limit. InfiniteMath's limit is about: -10^^308 to 10^^308 In simpler terms, Roblox's normal limit is 1 with 308 zeros. InfiniteMath's limit is 1 with 10^308 zeros. Fun fact, a googolplex is 10^100^100, which means you can use a googolplex with InfiniteMath. Numbers constructed from InfiniteMath supports arithmetic operators (+, -, *, /, ^, %) with constructed numbers and normal numbers, and comparison operators (&lt;, &gt;, &lt;=, &gt;=, ==, ~=) with other constructed numbers. InfiniteMath also has support for OrderedDataStores. There are also suffixes up to 1e+12000, after that all numbers will display scientific notation. If you want to see all the suffixes, here's a google doc with them. If you have a list that goes higher than 1e+12000 (Trillinovenonagintanongentillion/TRNNA), by all means share it with me, I'd love to see it. How does it work? A normal number in Roblox looks like this: 1 Now if we were to convert that to InfiniteMath, it would look like: {1, 0} To explain, we can construct a string out of a number by taking the coefficient and the exponent, and splitting them up into a string. Lets say we want to use 1000 with the module, we take the coefficient (1) and the exponent, which the amount of zeros (3) and put them in a string: {1, 3} Now if we did something like {1, 3} + {1, 2}, we would get: {1.1, 3} (1100) And since we're not using numbers, we can go above the limit. For example, &quot;1, 1000&quot; is equal to 1 with 1000 zeros, or 1 Untrigintatrecentillion. We can continue all the way up until reaching 1e+308 zeros, which would look like: {1, 1e+308} And if we tried to display that as a number, it would return 1e+1.e+308, aka 1 with 1 * 10^308 zeros. This is practically infinite, and if you ever have a use for going higher I will be very surprised.","keywords":""},{"title":"Getting Started","type":0,"sectionRef":"#","url":"/infinitemath/docs/intro","content":"","keywords":""},{"title":"Ready to get started?​","type":1,"pageTitle":"Getting Started","url":"/infinitemath/docs/intro#ready-to-get-started","content":"InstallationAPI Documentation "}]